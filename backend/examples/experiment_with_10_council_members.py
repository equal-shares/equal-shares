import logging

from src.algorithm.computation import min_max_equal_shares
from src.logger import LoggerName, get_logger

voters = [1, 2, 3, 4, 5, 6, 7, 8, 9]
cost = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
]
cost_min_max = [
    {1: (11000, 70000)},
    {2: (1000, 40000)},
    {3: (20000, 400000)},
    {4: (2000, 10000)},
    {5: (2000, 30000)},
    {6: (35000, 85000)},
    {7: (160000, 350000)},
    {8: (500, 3000)},
    {9: (500000, 1500000)},
    {10: (30000, 90000)},
    {11: (200000, 500000)},
    {12: (30000, 80000)},
    {13: (30000, 100000)},
    {14: (2000, 10000)},
    {15: (2000, 10000)},
    {16: (1000, 60000)},
    {17: (1000, 60000)},
    {18: (15000, 50000)},
    {19: (3000, 85000)},
    {20: (4000, 10000)},
    {21: (5000, 15000)},
    {22: (1000, 15000)},
    {23: (15000, 70000)},
    {24: (20000, 100000)},
    {25: (40000, 150000)},
    {26: (5000, 50000)},
    {27: (10000, 100000)},
    {28: (6000, 60000)},
    {29: (15000, 70000)},
    {30: (100000, 200000)},
    {31: (70000, 150000)},
]

bids_with_zeros = {
    1: {1: 70000, 2: 0, 3: 44000, 4: 0, 5: 28000, 6: 11000, 7: 0, 8: 11000, 9: 20000},
    2: {1: 26000, 2: 0, 3: 25000, 4: 0, 5: 18000, 6: 40000, 7: 14000, 8: 5000, 9: 23000},
    3: {1: 200000, 2: 0, 3: 400000, 4: 0, 5: 169000, 6: 340000, 7: 400000, 8: 60000, 9: 107000},
    4: {1: 10000, 2: 0, 3: 10000, 4: 0, 5: 10000, 6: 6000, 7: 7000, 8: 10000, 9: 10000},
    5: {1: 30000, 2: 0, 3: 30000, 4: 0, 5: 30000, 6: 30000, 7: 30000, 8: 10000, 9: 20000},
    6: {1: 85000, 2: 0, 3: 62000, 4: 0, 5: 61000, 6: 35000, 7: 69000, 8: 35000, 9: 55000},
    7: {1: 160000, 2: 0, 3: 300000, 4: 0, 5: 217000, 6: 350000, 7: 266000, 8: 201000, 9: 292000},
    8: {1: 3000, 2: 0, 3: 3000, 4: 0, 5: 3000, 6: 3000, 7: 3000, 8: 500, 9: 500},
    9: {1: 1120000, 2: 0, 3: 1500000, 4: 682000, 5: 1174000, 6: 1245000, 7: 1238000, 8: 500000, 9: 1150000},
    10: {1: 65000, 2: 0, 3: 70000, 4: 0, 5: 53000, 6: 90000, 7: 68000, 8: 30000, 9: 40000},
    11: {1: 400000, 2: 0, 3: 0, 4: 0, 5: 262000, 6: 0, 7: 0, 8: 0, 9: 296000},
    12: {1: 45000, 2: 0, 3: 30000, 4: 0, 5: 45000, 6: 30000, 7: 0, 8: 0, 9: 37000},
    13: {1: 35000, 2: 30000, 3: 30000, 4: 69000, 5: 59000, 6: 100000, 7: 0, 8: 0, 9: 95000},
    14: {1: 10000, 2: 10000, 3: 7000, 4: 0, 5: 7000, 6: 10000, 7: 10000, 8: 2000, 9: 10000},
    15: {1: 10000, 2: 10000, 3: 10000, 4: 9000, 5: 8000, 6: 8000, 7: 3000, 8: 2000, 9: 8000},
    16: {1: 15000, 2: 1000, 3: 60000, 4: 0, 5: 0, 6: 49000, 7: 60000, 8: 8000, 9: 60000},
    17: {1: 15000, 2: 60000, 3: 60000, 4: 33000, 5: 47000, 6: 37000, 7: 0, 8: 0, 9: 19000},
    18: {1: 30000, 2: 50000, 3: 0, 4: 0, 5: 29000, 6: 41000, 7: 0, 8: 20000, 9: 20000},
    19: {1: 65000, 2: 3000, 3: 85000, 4: 0, 5: 78000, 6: 85000, 7: 0, 8: 85000, 9: 63000},
    20: {1: 10000, 2: 10000, 3: 8000, 4: 0, 5: 0, 6: 7000, 7: 0, 8: 0, 9: 9000},
    21: {1: 15000, 2: 0, 3: 12000, 4: 0, 5: 13000, 6: 13000, 7: 0, 8: 0, 9: 10000},
    22: {1: 10000, 2: 15000, 3: 15000, 4: 13000, 5: 13000, 6: 12000, 7: 15000, 8: 3000, 9: 15000},
    23: {1: 40000, 2: 34000, 3: 0, 4: 0, 5: 0, 6: 15000, 7: 0, 8: 15000, 9: 28000},
    24: {1: 55000, 2: 0, 3: 0, 4: 0, 5: 0, 6: 20000, 7: 0, 8: 0, 9: 71000},
    25: {1: 40000, 2: 0, 3: 0, 4: 0, 5: 150000, 6: 0, 7: 0, 8: 40000, 9: 86000},
    26: {1: 50000, 2: 0, 3: 36000, 4: 0, 5: 50000, 6: 37000, 7: 0, 8: 0, 9: 35000},
    27: {1: 30000, 2: 10000, 3: 12000, 4: 0, 5: 100000, 6: 10000, 7: 100000, 8: 0, 9: 100000},
    28: {1: 25000, 2: 60000, 3: 6000, 4: 0, 5: 60000, 6: 36000, 7: 60000, 8: 21000, 9: 60000},
    29: {1: 70000, 2: 70000, 3: 15000, 4: 0, 5: 0, 6: 70000, 7: 70000, 8: 15000, 9: 70000},
    30: {1: 180000, 2: 0, 3: 100000, 4: 154000, 5: 190000, 6: 200000, 7: 0, 8: 100000, 9: 110000},
    31: {1: 81000, 2: 111000, 3: 70000, 4: 0, 5: 126000, 6: 70000, 7: 150000, 8: 96000, 9: 80000},
}


bids_without_zeros = {
    1: {1: 70000, 3: 44000, 5: 28000, 6: 11000, 8: 11000, 9: 20000},
    2: {1: 26000, 3: 25000, 5: 18000, 6: 40000, 7: 14000, 8: 5000, 9: 23000},
    3: {1: 200000, 3: 400000, 5: 169000, 6: 340000, 7: 400000, 8: 60000, 9: 107000},
    4: {1: 10000, 3: 10000, 5: 10000, 6: 6000, 7: 7000, 8: 10000, 9: 10000},
    5: {1: 30000, 3: 30000, 5: 30000, 6: 30000, 7: 30000, 8: 10000, 9: 20000},
    6: {1: 85000, 3: 62000, 5: 61000, 6: 35000, 7: 69000, 8: 35000, 9: 55000},
    7: {1: 160000, 3: 300000, 5: 217000, 6: 350000, 7: 266000, 8: 201000, 9: 292000},
    8: {1: 3000, 3: 3000, 5: 3000, 6: 3000, 7: 3000, 8: 500, 9: 500},
    9: {1: 1120000, 3: 1500000, 4: 682000, 5: 1174000, 6: 1245000, 7: 1238000, 8: 500000, 9: 1150000},
    10: {1: 65000, 3: 70000, 5: 53000, 6: 90000, 7: 68000, 8: 30000, 9: 40000},
    11: {1: 400000, 5: 262000, 9: 296000},
    12: {1: 45000, 3: 30000, 5: 45000, 6: 30000, 9: 37000},
    13: {1: 35000, 2: 30000, 3: 30000, 4: 69000, 5: 59000, 6: 100000, 9: 95000},
    14: {1: 10000, 2: 10000, 3: 7000, 5: 7000, 6: 10000, 7: 10000, 8: 2000, 9: 10000},
    15: {1: 10000, 2: 10000, 3: 10000, 4: 9000, 5: 8000, 6: 8000, 7: 3000, 8: 2000, 9: 8000},
    16: {1: 15000, 2: 1000, 3: 60000, 6: 49000, 7: 60000, 8: 8000, 9: 60000},
    17: {1: 15000, 2: 60000, 3: 60000, 4: 33000, 5: 47000, 6: 37000, 9: 19000},
    18: {1: 30000, 2: 50000, 5: 29000, 6: 41000, 8: 20000, 9: 20000},
    19: {1: 65000, 2: 3000, 3: 85000, 5: 78000, 6: 85000, 8: 85000, 9: 63000},
    20: {1: 10000, 2: 10000, 3: 8000, 6: 7000, 9: 9000},
    21: {1: 15000, 3: 12000, 5: 13000, 6: 13000, 9: 10000},
    22: {1: 10000, 2: 15000, 3: 15000, 4: 13000, 5: 13000, 6: 12000, 7: 15000, 8: 3000, 9: 15000},
    23: {1: 40000, 2: 34000, 6: 15000, 8: 15000, 9: 28000},
    24: {1: 55000, 6: 20000, 9: 71000},
    25: {1: 40000, 5: 150000, 8: 40000, 9: 86000},
    26: {1: 50000, 3: 36000, 5: 50000, 6: 37000, 9: 35000},
    27: {1: 30000, 2: 10000, 3: 12000, 5: 100000, 6: 10000, 7: 100000, 9: 100000},
    28: {1: 25000, 2: 60000, 3: 6000, 5: 60000, 6: 36000, 7: 60000, 8: 21000, 9: 60000},
    29: {1: 70000, 2: 70000, 3: 15000, 6: 70000, 7: 70000, 8: 15000, 9: 70000},
    30: {1: 180000, 3: 100000, 4: 154000, 5: 190000, 6: 200000, 8: 100000, 9: 110000},
    31: {1: 81000, 2: 111000, 3: 70000, 5: 126000, 6: 70000, 7: 150000, 8: 96000, 9: 80000},
}


budget = 3000000


def main() -> None:
    get_logger(LoggerName.ALGORITHM).setLevel(logging.INFO)
    get_logger(LoggerName.ALGORITHM).addHandler(logging.StreamHandler())

    winners_allocations, candidates_payments_per_voter = min_max_equal_shares(
        voters,
        cost_min_max,
        budget,
        bids_without_zeros,
    )
    print(
        f"\nwinners_allocations={winners_allocations}\n\ncandidates_payments_per_voter={candidates_payments_per_voter}"
    )


if __name__ == "__main__":
    main()
